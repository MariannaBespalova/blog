[{"C:\\wamp\\www\\blog\\src\\index.js":"1","C:\\wamp\\www\\blog\\src\\reportWebVitals.js":"2","C:\\wamp\\www\\blog\\src\\App.js":"3","C:\\wamp\\www\\blog\\src\\blog\\components\\PostItem.js":"4","C:\\wamp\\www\\blog\\src\\blog\\components\\PostList.js":"5","C:\\wamp\\www\\blog\\src\\blog\\Blog.js":"6","C:\\wamp\\www\\blog\\src\\blog\\components\\AuthorInfo.js":"7","C:\\wamp\\www\\blog\\src\\blog\\components\\LoadingOverlay.js":"8","C:\\wamp\\www\\blog\\src\\blog\\components\\Comments.js":"9"},{"size":243,"mtime":1608588680766,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":277,"mtime":1609096971382,"results":"13","hashOfConfig":"11"},{"size":1181,"mtime":1609100101772,"results":"14","hashOfConfig":"11"},{"size":1089,"mtime":1609065363012,"results":"15","hashOfConfig":"11"},{"size":1007,"mtime":1609096961198,"results":"16","hashOfConfig":"11"},{"size":2503,"mtime":1609057865739,"results":"17","hashOfConfig":"11"},{"size":318,"mtime":1608931195572,"results":"18","hashOfConfig":"11"},{"size":1794,"mtime":1609097375304,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"10600hc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\wamp\\www\\blog\\src\\index.js",[],["40","41"],"C:\\wamp\\www\\blog\\src\\reportWebVitals.js",[],"C:\\wamp\\www\\blog\\src\\App.js",[],"C:\\wamp\\www\\blog\\src\\blog\\components\\PostItem.js",["42"],"C:\\wamp\\www\\blog\\src\\blog\\components\\PostList.js",[],"C:\\wamp\\www\\blog\\src\\blog\\Blog.js",[],"C:\\wamp\\www\\blog\\src\\blog\\components\\AuthorInfo.js",["43"],"import React, { Component } from 'react';\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport LoadingOverlay from \"./LoadingOverlay\";\r\n\r\nclass AuthorInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      author: null,\r\n      loading: false,\r\n      error: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { authorId } = this.props;\r\n    if (authorId) {\r\n      this.fetchAuthor(authorId);\r\n      this.fetchAlbums(authorId);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.authorId !== this.props.authorId && this.props.authorId) {\r\n      this.fetchAuthor(this.props.authorId);\r\n      this.fetchAlbums(this.props.authorId);\r\n    }\r\n  }\r\n\r\n  fetchAuthor(authorId) {\r\n    this.setState({ loading: true });\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${authorId}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        this.setState({ author: data, loading: false })\r\n      })\r\n      .catch(e => this.setState({ error: e.message, loading: false, author: null }))\r\n  }\r\n\r\n  fetchAlbums(authorId) {\r\n    this.setState({ loading: true });\r\n    fetch(`https://jsonplaceholder.typicode.com/users/${authorId}/albums`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ albumsQuantity: data.length, loading: false }))\r\n      .catch(e => this.setState({ error: e.message, loading: false, albumsQuantity: null }))\r\n  }\r\n\r\n  render() {\r\n    const { error, author, loading, albumsQuantity } = this.state;\r\n    return (\r\n      <div className='author-fixed'>\r\n        <div className='error'>{error}</div>\r\n        <LoadingOverlay active={loading} />\r\n        {author &&\r\n          <Card>\r\n            <Image src='https://react.semantic-ui.com/images/avatar/large/matthew.png' wrapped ui={false} />\r\n            <Card.Content>\r\n              <Card.Header>{author.name}</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>{author.email}</span>\r\n              </Card.Meta>\r\n              <Card.Description>\r\n                {author.address.city}, {author.address.street} {author.address.zipcode}\r\n              </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a>\r\n                <Icon name='camera' />\r\n                {albumsQuantity} albums\r\n              </a>\r\n            </Card.Content>\r\n          </Card>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthorInfo;\r\n","C:\\wamp\\www\\blog\\src\\blog\\components\\LoadingOverlay.js",[],"C:\\wamp\\www\\blog\\src\\blog\\components\\Comments.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":20,"column":13,"nodeType":"50","endLine":20,"endColumn":87},{"ruleId":"51","severity":1,"message":"52","line":68,"column":15,"nodeType":"50","endLine":68,"endColumn":18},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]